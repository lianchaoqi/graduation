package com.jack.graduation.mapper;

import com.baomidou.mybatisplus.core.mapper.BaseMapper;
import com.jack.graduation.bean.AlbumGnereYear;
import com.jack.graduation.bean.AlbumGnereYearExample;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.MapKey;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

public interface AlbumGnereYearMapper extends BaseMapper<AlbumGnereYear> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ads_album_gnere_year_nd
     *
     * @mbggenerated Fri Jan 20 13:10:23 CST 2023
     */
    int countByExample(AlbumGnereYearExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ads_album_gnere_year_nd
     *
     * @mbggenerated Fri Jan 20 13:10:23 CST 2023
     */
    int deleteByExample(AlbumGnereYearExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ads_album_gnere_year_nd
     *
     * @mbggenerated Fri Jan 20 13:10:23 CST 2023
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ads_album_gnere_year_nd
     *
     * @mbggenerated Fri Jan 20 13:10:23 CST 2023
     */
    int insert(AlbumGnereYear record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ads_album_gnere_year_nd
     *
     * @mbggenerated Fri Jan 20 13:10:23 CST 2023
     */
    int insertSelective(AlbumGnereYear record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ads_album_gnere_year_nd
     *
     * @mbggenerated Fri Jan 20 13:10:23 CST 2023
     */
    List<AlbumGnereYear> selectByExample(AlbumGnereYearExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ads_album_gnere_year_nd
     *
     * @mbggenerated Fri Jan 20 13:10:23 CST 2023
     */
    AlbumGnereYear selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ads_album_gnere_year_nd
     *
     * @mbggenerated Fri Jan 20 13:10:23 CST 2023
     */
    int updateByExampleSelective(@Param("record") AlbumGnereYear record, @Param("example") AlbumGnereYearExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ads_album_gnere_year_nd
     *
     * @mbggenerated Fri Jan 20 13:10:23 CST 2023
     */
    int updateByExample(@Param("record") AlbumGnereYear record, @Param("example") AlbumGnereYearExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ads_album_gnere_year_nd
     *
     * @mbggenerated Fri Jan 20 13:10:23 CST 2023
     */
    int updateByPrimaryKeySelective(AlbumGnereYear record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ads_album_gnere_year_nd
     *
     * @mbggenerated Fri Jan 20 13:10:23 CST 2023
     */
    int updateByPrimaryKey(AlbumGnereYear record);

    List<String> getGenreStrings();

    /**
     * 在语义相同，有索引的情况下：
     * group by和distinct都能使用索引，效率相同。因为group by和distinct近乎等价，distinct可以被看做是特殊的group by。
     * 在语义相同，无索引的情况下：
     * distinct效率高于group by。原因是distinct 和 group by都会进行分组操作，但group by在Mysql8.0之前会进行隐式排序，
     * 导致触发filesort，sql执行效率低下。
     * 但从Mysql8.0开始，Mysql就删除了隐式排序，所以，此时在语义相同，无索引的情况下，group by和distinct的执行效率也是近乎等价的。
     *
     * @return
     */
    List<String> getFilenameStrings();

    Integer delRes(String filename);

    List<AlbumGnereYear> getTop10(String startYear, String endYeay, String filename);

    List<AlbumGnereYear> getTop5(String startYear, String endYeay, String filename);

    @MapKey("genre")
    List<Map<String, Long>> getPieData(String startYear, String endYeay, String filename);

}